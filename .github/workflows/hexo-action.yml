name: Blog Deploy

on:
  push:
    branches:
      - Hexo

jobs:
  build:
    runs-on: ubuntu-latest
    name: A job to deploy blog.
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true # Checkout private submodules(themes or something else).
      - name: Restore last modified time
        run: git ls-files -z | while read -d '' path; do touch -d $(git log -1 --format="@%ct" "$path") "$path"; done
      - name: Enable Corepack
        run: corepack enable
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "yarn"
      # Caching dependencies to speed up workflows. (GitHub will remove any cache entries that have not been accessed in over 7 days.)
      - name: Cache node modules
        uses: actions/cache@v4
        id: cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn
#      - uses: actions/checkout@v4
#        with:
#          ref: master
#          path: .deploy_git
#      - run: git config --global user.name "Kurenai"
#      - run: git config --global user.email "kurenai233@yahoo.com"
      - name: Deploy
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
        run: yarn exec hexo g -d

      # Deploy hexo blog website.
      # - name: Deploy
      #   id: deploy
      #   uses: KurenaiRyu/hexo-action@v1.0.4
      #   with:
      #     deploy_key: ${{ secrets.HEXO_DEPLOY_KEY }}
      #     user_name: Kurenai  # (or delete this input setting to use bot account)
      #     user_email: kurenai233@yahoo.com  # (or delete this input setting to use bot account)
      #     commit_msg: ${{ github.event.head_commit.message }}  # (or delete this input setting to use hexo default settings)
      # Use the output from the `deploy` step(use for test action)
      - name: Get the output
        run: |
          echo "${{ steps.deploy.outputs.notify }}"

